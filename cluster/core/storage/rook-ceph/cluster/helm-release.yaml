---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      chart: rook-ceph
      version: v1.9.1
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    # TODO(rook-ceph): Rename dependency to rook-ceph-operator
    - name: rook-ceph
      namespace: rook-ceph
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        annotations:
          kubernetes.io/ingress.class: "nginx"
        host:
          name: &host "rook.${SECRET_PUBLIC_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - *host
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_enable_discard = true
    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v17.2.0
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: home-opsw1
            devices:
              - name: "/dev/vdb"
          - name: home-opsw2
            devices:
              - name: "/dev/vdb"
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-rbdplugin-snapclass
      annotations:
        k10.kasten.io/is-snapshot-class: "true"
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 1000m
                memory: 2Gi
              limits:
                memory: 2Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    #cephObjectStores:
    #  - name: ceph-objectstore
    #    spec:
    #      metadataPool:
    #        failureDomain: host
    #        replicated:
    #          size: 3
    #      dataPool:
    #        failureDomain: host
    #        erasureCoded:
    #          dataChunks: 2
    #          codingChunks: 1
    #      preservePoolsOnDelete: true
    #      gateway:
    #        port: 80
    #        resources:
    #          requests:
    #            cpu: 1000m
    #            memory: 512Mi
    #          limits:
    #            memory: 1Gi
    #        instances: 1
    #      healthCheck:
    #        bucket:
    #          interval: 60s
    #    storageClass:
    #      enabled: true
    #      name:
    #      reclaimPolicy: Delete
    #      parameters:
    #        region: us-east-1
